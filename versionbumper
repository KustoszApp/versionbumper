#!/usr/bin/env bash
# SPDX-FileCopyrightText: 2022 Mirek DÅ‚ugosz <mirek@mirekdlugosz.com>
# SPDX-License-Identifier: EUPL-1.2
#
# https://github.com/olivergondza/bash-strict-mode
set -euo pipefail
trap 's=$?; echo >&2 "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

find_next_version() {
    local PREFIX="$(date "+%y.%m.")"
    local suffix=0
    local found=0

    while [ "$found" -eq 0 ]; do
        version="${PREFIX}${suffix}"
        if git tag |grep -q "^${version}$"; then
            suffix="$(( suffix + 1 ))"
            continue
        fi
        found=1
    done
    echo "$version"
}

git_commit_safe_check() {
    if [ "$(git diff --numstat |wc -l)" -eq 0 ]; then
        echo "No changes made"
        exit 1
    fi

    if [ "$(git diff --numstat |wc -l)" -gt 1 ]; then
        echo "Too many files modified"
        exit 1
    fi

    echo xx"$(git diff --numstat |awk '{print $1}')"xx
    
    if [ "$(git diff --numstat |awk '{print $1}')" -gt 1 ]; then
        echo "Too many lines modified"
        exit 1
    fi
}

make_git_commit_and_tag() {
    local next_version="$(find_next_version)"
    git add "$@"
    git commit -m "Release version $next_version"
    git tag "$next_version"
}

update_pyproject_toml() {
    if [ ! -e "pyproject.toml" ]; then
        return
    fi
    echo "Found pyproject.toml file"
    local next_version="$(find_next_version)"
    sed -i -e '/^version/s/.*/version = "'"${next_version}"'"/' pyproject.toml
    git_commit_safe_check
    make_git_commit_and_tag pyproject.toml
}

update_package_json() {
    if [ ! -e "package.json" ]; then
        return
    fi
    echo "Found package.json file"
    local next_version="$(find_next_version)"
    sed -i -e '/\s*"version": "[0-9\.]\+",/s/.*/  "version": "'"${next_version}"'",/' package.json
    git_commit_safe_check
    make_git_commit_and_tag package.json
}

main() {
    update_pyproject_toml
    update_package_json
}

main
